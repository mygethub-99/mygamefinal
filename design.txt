Design Logic Notes:

1. Design a game other than those suggested.
2. Implement the following learning points.
Understand the purpose of http methods/verbs.
Understand the separation of views/endpoints and internal models and logic.
Understand why task queues or out-of-sequence running of code is important.
Understand status codes? This might be irrelevant for endpoints thanks to intuitive endpoints exceptions.

3. Increase knowledge of loops and iterating through dictionaries, using object attributes and inputs supplied by user input request.
4. Implement a way to set level of difficulty for the game using a timer and unix time.
5. Tried to implement python THREADING, but found out that threading is no longer supported allowed in GAE

Properties added:
Timer: In the Game entity I added a timer property. This is setup upon the first move of a new game and is compared to current 
unix time before a new move is allowed. Time delta is compared to allowed time delta set my game difficulty.
Difficulty: This property stores the user input level 1-3. This property is used to calculate when a game runs out of time.
Timeout: This is flagged to a True if the users game runs out of time and is used in the craftItemNew module.
